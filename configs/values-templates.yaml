alertmanager:
  alertmanagerSpec:
    logLevel: debug 
  config:
    global:
      http_config:
        tls_config:
          insecure_skip_verify: true
      resolve_timeout: 5m
    route:
      group_by: ["namespace"]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: telegram
      routes:
        - receiver: telegram
          matchers:
            - severity = "critical"
    receivers:
      - name: telegram
        telegram_configs:
          - chat_id: "***"
            bot_token: "***"
            api_url: "https://api.telegram.org"
            send_resolved: true
            parse_mode: HTML
            message: '{{ template "telegram.simple" . }}'
    templates:
      - "/etc/alertmanager/config/*.tmpl"
  templateFiles:
    template_telegram_simple.tmpl: |-
      {{ define "telegram.simple" }}List of fired alerts:\n{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}{{ end }}
additionalPrometheusRulesMap:
  rule-name:
    groups:
      - name: openproject
        rules:
          - alert: openproject pod not running
            expr: kube_pod_status_ready{condition="true",pod=~"openproject.*",namespace="openproject"}==0
            for:
            labels:
              severity: critical
            annotations:
              summary: openproject pod is not running
              description: "{{ $labels.instance }} is not running"            
